services:
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    restart: unless-stopped
    command: ["--kafka.server=kafka:9092"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9308/metrics"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - core
      - monitoring

  prometheus:
    image: prom/prometheus:v2.55.0
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=7d
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      kafka-exporter:
        condition: service_healthy
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - core
      - monitoring

  grafana:
    image: grafana/grafana:11.3.0
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - monitoring

volumes:
  grafana-data:

networks:
  monitoring:
    driver: bridge
